services:
  census3-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: census3-bigquery-service
    env_file: .env
    ports:
      - "${CENSUS3_API_PORT:-8080}:${CENSUS3_API_PORT:-8080}"
    volumes:
      # Persist census and snapshot data
      # Default data directory is $HOME/.bigcensus3, but can be configured via CENSUS3_DATA_DIR
      - census3_data:${CENSUS3_DATA_DIR:-/app/.bigcensus3}
      
      # Mount queries configuration file
      # Make sure queries.yaml exists in the project root (copy from queries.yaml.example)
      - ./queries.yaml:/app/queries.yaml:ro
    restart: ${RESTART:-unless-stopped}
    # Decode base64 credentials and start service
    command: >
      sh -c "
        if [ ! -z \"$$GOOGLE_APPLICATION_CREDENTIALS_JSON\" ]; then
          echo \"Setting up Google Cloud credentials from base64...\"
          echo \"$$GOOGLE_APPLICATION_CREDENTIALS_JSON\" | base64 -d > /tmp/gcp-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-credentials.json
        fi
        echo \"Starting census3-bigquery service...\"
        exec ./census3-service
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${CENSUS3_API_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.census3-service.rule=PathPrefix(`/`)"
      - "traefik.http.routers.census3-service.entrypoints=websecure"
      - "traefik.http.routers.census3-service.tls=true"
      - "traefik.http.routers.census3-service.tls.certresolver=le"
      - "traefik.http.services.census3-service.loadbalancer.server.port=${CENSUS3_API_PORT:-8080}"
      - "traefik.http.routers.census3-service.tls.domains[0].main=${DOMAIN}"

  traefik:
    image: traefik:3.4.1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--log.level=INFO"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=root@vocdoni.io"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    restart: ${RESTART:-unless-stopped}
    depends_on:
      - census3-service
    profiles:
      - prod

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --label-enable --include-stopped --revive-stopped
    restart: ${RESTART:-unless-stopped}
    depends_on:
      - census3-service
    profiles:
      - prod

volumes:
  census3_data:
    driver: local
